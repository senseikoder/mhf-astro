---
export const prerender = false;
import PageLayout from "@/layouts/PageLayout.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import FormattedTime from "@/components/FormattedTime.astro";
import { getMonday, getSunday, formatDate } from "@/js/utils.js";

const idioma = Astro.currentLocale;
const wpurl = import.meta.env.PUBLIC_WP_URL_EVENTS;
const { semana = "1", pagina = "1" } = Astro.params;

// Convert parameters to numbers
const numSemana = Number(semana);
const numPagina = Number(pagina);
const eventosPorPagina = 9; // Number of events per page

// Calculate start and end date of the requested week
const today = new Date();
const currentMonday = getMonday(new Date(today));
currentMonday.setDate(currentMonday.getDate() + (numSemana - 1) * 7);
const currentSunday = getSunday(new Date(currentMonday));

const fecha_ini = formatDate(currentMonday);
const fecha_fin = formatDate(currentSunday);

// Get events for the week with pagination
const res = await fetch(
  `${wpurl}/events?start_date=${fecha_ini}&end_date=${fecha_fin}&lang=${idioma}&per_page=${eventosPorPagina}&page=${numPagina}`
);

const eventosData = await res.json();
const eventosPaginados = eventosData.events || [];
const totalEventos = eventosData.total || 0;
const totalPaginas = eventosData.total_pages;

// Function to generate navigation URL
const generarUrl = (nuevaSemana, nuevaPagina = 1) => {
  // Don't allow weeks less than 1
  const sem = Math.max(1, nuevaSemana);
  // Ensure page is within limits
  const pag = Math.max(1, Math.min(nuevaPagina, totalPaginas));
  return `/en/events/${sem}/${pag}`;
};
---

<PageLayout title="MyHealthFair - Events" description="Events MyHealthFair Massachusetts">
  <section class="section">
    <div class="container is-max-widescreen">
      <!-- Week navigation -->
      <div class="buttons is-centered">
        <a
          class="button is-info is-outlined"
          href={generarUrl(numSemana - 1, 1)}
        >
          Previous Week
        </a>
        <a
          class="button is-info is-outlined"
          href={generarUrl(numSemana + 1, 1)}
        >
          Next Week
        </a>
      </div>

      <div class="has-text-centered my-4">
        <p class="is-size-5">
          Showing events from week: <strong>
            {
              currentMonday.toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }</strong
          >
          to <strong
            >{
              currentSunday.toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }</strong
          >
        </p>
      </div>

      <!-- Event pagination -->
      {
        totalPaginas > 1 && (
          <nav
            class="pagination is-centered is-rounded"
            role="navigation"
            aria-label="pagination"
          >
            <a
              class="pagination-previous"
              href={generarUrl(numSemana, numPagina - 1)}
              disabled={numPagina <= 1}
            >
              Previous
            </a>
            <a
              class="pagination-next"
              href={generarUrl(numSemana, numPagina + 1)}
              disabled={numPagina >= totalPaginas}
            >
              Next
            </a>
            <ul class="pagination-list">
              {Array.from({ length: totalPaginas }, (_, i) => i + 1).map(
                (pag) => (
                  <li>
                    <a
                      class={`pagination-link ${pag === numPagina ? "is-current" : ""}`}
                      href={generarUrl(numSemana, pag)}
                      aria-label={`Go to page ${pag}`}
                    >
                      {pag}
                    </a>
                  </li>
                )
              )}
            </ul>
          </nav>
        )
      }

      <div class="columns is-multiline is-variable is-8">
        {
          eventosPaginados.length > 0 ? (
            eventosPaginados.map((evento) => (
              <div class="column is-4">
                <div class="card">
                  <div class="card-content">
                    <a href={`/en/event/${evento.slug}`}>
                      <img
                        width={720}
                        height={360}
                        src={evento.image?.url || "/placeholder-event.jpg"}
                        alt={evento.title || "Event"}
                        loading="lazy"
                      />
                      <h4 class="title is-5 my-4">
                        <Fragment set:html={evento.title} />
                      </h4>
                    </a>
                    <small>
                      <FormattedDate
                        date={new Date(evento.start_date)}
                        locale="en-US"
                      />{" "}
                      @
                      <FormattedTime
                        date_ini={new Date(evento.start_date)}
                        date_end={new Date(evento.end_date)}
                        locale="en-US"
                      />
                    </small>
                  </div>
                </div>
              </div>
            ))
          ) : (
            <div class="column is-12 has-text-centered">
              <p class="is-size-5">No events scheduled for this week.</p>
            </div>
          )
        }
      </div>

      <!-- Repeat pagination at the bottom -->
      {
        totalPaginas > 1 && (
          <nav
            class="pagination is-centered is-rounded mt-6"
            role="navigation"
            aria-label="pagination"
          >
            <a
              class="pagination-previous"
              href={generarUrl(numSemana, numPagina - 1)}
              aria-disabled={numPagina <= 1}
            >
              Previous
            </a>
            <a
              class="pagination-next"
              href={generarUrl(numSemana, numPagina + 1)}
              aria-disabled={numPagina >= totalPaginas}
            >
              Next
            </a>
            <ul class="pagination-list">
              {Array.from({ length: totalPaginas }, (_, i) => i + 1).map(
                (pag) => (
                  <li>
                    <a
                      class={`pagination-link ${pag === numPagina ? "is-current" : ""}`}
                      href={generarUrl(numSemana, pag)}
                      aria-label={`Go to page ${pag}`}
                    >
                      {pag}
                    </a>
                  </li>
                )
              )}
            </ul>
          </nav>
        )
      }
    </div>
  </section>
</PageLayout>
